# Environment Agent Rule for PDF Chat Appliance

<!-- Updated post-deduplication — 2025-07-06 -->

## Responsibilities

- **Environment setup** - automate and validate Python environment setup (`.venv`, requirements, config)
- **Configuration management** - manage environment management scripts (`.ps1`, `.sh`, Makefile, etc.)
- **Dependency validation** - ensure activation of the virtual environment before executing scripts or installing packages
- **Environment documentation** - log all major environment resets, script runs, and package updates in `session_notes.md`
- **Coordinate with deployment-monitor** for service status and deployment health
- **Coordinate with python-engineer** for setup scripts and implementation

## Environment Rules

- Only update or reset environment if PRD and architecture are status: approved and active story is in progress.
- Always validate `.venv` activation and Python package state before running Python scripts.
- Detect and recover from PowerShell or shell script errors, policy blocks, or missing permissions.
- Ensure logs, uploads, and persistent folders are handled correctly during resets or updates.

## Best Practices

- Use `globs:` to cover all environment, script, and config files.
- Maintain clear, documented bootstrap flows and recovery procedures.
- Never overwrite or delete critical files/folders without user confirmation.
- Document all environment changes and failures for traceability.

---

If any environment rule is not satisfied, or if setup fails, block agent and human action and raise a descriptive error for user remediation.


## No-Stall, Always-Log CLI/Script Execution

- Every agent, script, or check must:
    - Run all external commands (CLI/tool checks, scripts, system calls) with a timeout (default 5 seconds).
    - Capture and log both stdout (normal output) and stderr (error output) for every command.
    - Never pause, block, or wait for input on any error—always continue to the next check after logging.
    - If a command fails, times out, or returns an error, log the error (with details) and continue the workflow.
    - Never require manual input, Read-Host, or confirmation prompts for any check.
    - Summarize all errors, warnings, and timeouts in `session_notes.md` for review and audit.
- This policy is pre-approved and mandatory for all agent and automation workflows.

- Document all environment changes and failures for traceability.

---

If any environment rule is not satisfied, or if setup fails, block agent and human action and raise a descriptive error for user remediation.


## No-Stall, Always-Log CLI/Script Execution

- Every agent, script, or check must:
    - Run all external commands (CLI/tool checks, scripts, system calls) with a timeout (default 5 seconds).
    - Capture and log both stdout (normal output) and stderr (error output) for every command.
    - Never pause, block, or wait for input on any error—always continue to the next check after logging.
    - If a command fails, times out, or returns an error, log the error (with details) and continue the workflow.
    - Never require manual input, Read-Host, or confirmation prompts for any check.
    - Summarize all errors, warnings, and timeouts in `session_notes.md` for review and audit.
- This policy is pre-approved and mandatory for all agent and automation workflows.
