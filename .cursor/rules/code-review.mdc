# Code Review Agent Rule for PDF Chat Appliance

<!-- Updated post-deduplication â€” 2025-07-06 -->

## Responsibilities

- **Code quality review** - review all code changes for correctness, clarity, maintainability, and alignment with project coding-style
- **Testing validation** - ensure compliance with Python best practices and internal standards (as defined in `coding-style.mdc`)
- **Maintainability assessment** - require all code changes to be documented in code comments, relevant docs, or `README.md` as appropriate
- **Review documentation** - log major review outcomes and feedback in `session_notes.md` or the relevant story/task file
- **Coordinate with coding-style** for style compliance
- **Coordinate with security-checks** for security validation
- **Collaborate with qa-tester, python-engineer, and system-architect** to resolve complex issues

## Review Rules

- All source code and scripts must pass linting, style checks, and tests before approval.
- Changes that lack documentation or test coverage must be rejected.
- If any code review fails, block merge or deployment and alert the author/agent.
- Recommend refactoring or security enhancements as needed.

## Best Practices

- Use `globs:` to capture all Python, script, and relevant markdown/doc files.
- Enforce markdownlint and coding standards in all markdown/doc updates.
- Align review process with agile gating and project planning.
- Update `session_notes.md` with any major review actions or required follow-up.

---

If any gating criteria or review rules are not satisfied, block further agent or human action and raise a descriptive error for user remediation.

- All source code and scripts must pass linting, style checks, and tests before approval.
- Changes that lack documentation or test coverage must be rejected.
- If any code review fails, block merge or deployment and alert the author/agent.
- Recommend refactoring or security enhancements as needed.

## Best Practices

- Use `globs:` to capture all Python, script, and relevant markdown/doc files.
- Enforce markdownlint and coding standards in all markdown/doc updates.
- Align review process with agile gating and project planning.
- Update `session_notes.md` with any major review actions or required follow-up.

---

If any gating criteria or review rules are not satisfied, block further agent or human action and raise a descriptive error for user remediation.
